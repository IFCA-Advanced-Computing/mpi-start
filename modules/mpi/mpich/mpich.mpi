#!/bin/bash

#
# Copyright (c) 2006-2007 High Performance Computing Center Stuttgart,
#                         University of Stuttgart.  All rights reserved.
#           (c) 2009-2001 Instituto de Fisica de Cantabria - CSIC. 


if test "x$MPI_START_MPI_PREFIX" = "x"  ; then    
    export MPI_START_MPI_PREFIX=/opt/mpich-1.2.7
    debug_msg "use default mpi path: $MPI_START_MPI_PREFIX"
fi


# activate MPI
mpi_start_activate_mpi $MPI_START_MPI_PREFIX $MPI_START_MPI_MODULE
mpi_start_get_plugin "osc_mpiexec.sh" 1
. $MPI_START_PLUGIN_FILES

#
# start an mpi job
#
mpi_exec () {
    if test "$MPI_START_SCHEDULER" = "slurm" ; then
        slurm_mpiexec
        return $?
    fi

    # do prefer mpirun!
    if test "x$MPI_MPIRUN" != "x"; then
        MPIEXEC="$MPI_MPIRUN"
        MPI_GLOBAL_PARAMS="$MPI_SPECIFIC_MPIRUN_PARAMS"
    elif test "x$MPI_MPIEXEC" != "x"; then
        MPIEXEC=$MPI_MPIEXEC
        MPI_GLOBAL_PARAMS="$MPI_SPECIFIC_MPIEXEC_PARAMS"
        
        if test ${OSC_MPIEXEC} -eq  1 ; then
            osc_mpiexec 
            err=$?
            # no need to do anything else
            return $err
        fi
    else
        error_msg "no mpiexec/mpirun found!"
        dump_env
        exit 1
    fi

    # NO OSC mpiexec case
    local machines_params=""
    if test "x$I2G_MPI_PER_NODE" = "x1" ; then
        machines_params="-machinefile $MPI_START_HOSTFILE -np $MPI_START_NP"
    elif test "x$MPI_START_NPHOST" != "x" ; then
        mpi_start_mktemp
        MACHINES=$MPI_START_TEMP_FILE
        for host in `cat $MPI_START_HOSTFILE` ; do 
            for ((i=0; i < MPI_START_NPHOST; i++)) ; do
                echo $host >> $MACHINES
            done
        done
        machines_params="-machinefile $MACHINES -np $MPI_START_NP"
    else
        machines_params="-machinefile $MPI_START_MACHINEFILE -np $MPI_START_NP"
    fi
 
    if test "x$MPI_START_SSH_AGENT" != "x"; then
        # we are not using default start methods, setting specific ssh 
        debug_msg "setting specific ssh agent"
        export P4_RSHCOMMAND=$MPI_START_SSH_AGENT
    fi

    MPI_GLOBAL_PARAMS="$MPI_GLOBAL_PARAMS $machines_params"

    mpi_start_get_plugin "generic_mpiexec.sh" 1
    . $MPI_START_PLUGIN_FILES
    generic_mpiexec
    err=$?
    return $err
}


mpi_start () {
    mpi_start_get_plugin "generic_mpi_start.sh" 1
    . $MPI_START_PLUGIN_FILES
    generic_mpi_start
    return $?
}
