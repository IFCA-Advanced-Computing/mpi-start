#!/bin/sh
#
# Copyright (c) 2006-2007 High Performance Computing Center Stuttgart,
#                         University of Stuttgart.  All rights reserved.
# Copyright (c) 2006-2007 Charles Loomis
#           (c) 2009-2010 Instituto de Fisica de Cantabria - CSIC. 
#

if test "x$MPI_START_MPI_PREFIX" = "x"  ; then    
    # TODO: find correct path for mpich in SL5
    export MPI_START_MPI_PREFIX=/opt/mpich2-1.0.4p1
    debug_msg "use default mpi path: $MPI_START_MPI_PREFIX"
fi

# activate MPI
mpi_start_activate_mpi $MPI_START_MPI_PREFIX "$MPI_START_MPI_MODULE"

# start an mpi job with mpd
mpich2_with_mpd () {
    debug_msg "assume it is safe to set the machinefile and number of processes"
    if test "x${I2G_MPI_PER_NODE}" != "x" ; then
        debug_msg "Creating machine file for per node option"
        MACHINES=`mpi_start_mktemp`
        for host in `cat $MPI_START_HOSTFILE` ; do 
            for ((i=0; i < I2G_MPI_PER_NODE; i++)) ; do
                echo $host >> $MACHINES
            done
        done
        export MPI_START_CLEANUP_FILES="$MPI_START_CLEANUP_FILES $MACHINES" 
    else
        if test $MPI_START_NP -gt $MPI_START_NSLOTS ; then
            debug_msg "Creating machine file for starting more processes than available slots"
            MACHINES=`mpi_start_mktemp`
            while test `cat $MACHINES | wc -l` -lt $MPI_START_NP ; do
                cat $MPI_START_MACHINEFILE >> $MACHINES
            done
            export MPI_START_CLEANUP_FILES="$MPI_START_CLEANUP_FILES $MACHINES" 
        else
            MACHINES=$MPI_START_MACHINEFILE
        fi
    fi
    export I2G_MACHINEFILE_AND_NP="-machinefile $MACHINES -np $MPI_START_NP"
    MPDBOOT_PARAMS="-n $MPI_START_NHOSTS -f $MPI_START_HOSTFILE"

    # take care that the ".mpd.conf" file is available
    # make sure that we have a home, of not use pwd
    if test "x$HOME" == "x" ; then
        export HOME=$PWD
    fi
    echo "MPD_SECRETWORD=" > $HOME/.mpd.conf
    chmod 0600 $HOME/.mpd.conf

    if test "x$MPI_START_SSH_AGENT" != "x"; then
        # we are not using default start methods, setting specific ssh 
        debug_msg "setting specific ssh agent"
        MPDBOOT_PARAMS="$MPDBOOT_PARAMS --rsh=$MPI_START_SSH_AGENT"
    fi

    # Start MPICH2 daemon.
    mpdboot $MPDBOOT_PARAMS 
    MPI_SPECIFIC_PARAMS=$MPICH2_PARAMS
    . $MPI_START_PREFIX/../etc/mpi-start/generic_mpiexec.sh
    generic_mpiexec
    err=$?

    # Stop the daemon.
    mpdallexit
    return $err
}

#
# start an mpi job
#
mpi_exec () {
    if test $MPI_START_SCHEDULER = "slurm" ; then
        slurm_mpiexec
        return $?
    fi

    . $MPI_START_PREFIX/../etc/mpi-start/common.sh
    mpi_start_search_mpiexec

    if test "x$MPI_MPIEXEC" != "x"; then
        MPIEXEC=$MPI_MPIEXEC

        # how to test if the mpiexec needs the -np and -machinefile args??
        $MPIEXEC 2>&1 | grep -e "-\<np\>" > /dev/null 2>&1
        status=$?
        if test $status -ne 0 ; then
            # OSC mpiexec! 
            # if a comm method has already been requested don't set
            if `echo $MPI_SPECIFIC_PARAMS | grep -vq "comm=" 2> /dev/null`; then
                MPI_SPECIFIC_PARAMS="$MPI_SPECIFIC_PARAMS --comm=pmi"
            fi
            if test "x$I2G_MPI_PER_NODE" = "x1" ; then
                MPI_SPECIFIC_PARAMS="$MPI_SPECIFIC_PARAMS -pernode"
            elif test "x${I2G_MPI_PER_NODE}" != "x" ; then
                warn_msg "Per node option ignored when using OSC mpiexec"
            fi
            . $MPI_START_PREFIX/../etc/mpi-start/generic_mpiexec.sh
            generic_mpiexec
            err=$?
        else
            MPIEXEC=$MPI_MPIEXEC
            mpich2_with_mpd
            err=$?
        fi
    elif test "x$MPI_MPIRUN" != "x"; then
        MPIEXEC=$MPI_MPIRUN
        mpich2_with_mpd
        err=$?
    else
        debug_msg "no mpiexec/mpirun found!"
        dump_env
        exit 1
    fi
    return $err
}


mpi_start () {
    . $MPI_START_PREFIX/../etc/mpi-start/generic_mpi_start.sh
    generic_mpi_start
    return $?
}
