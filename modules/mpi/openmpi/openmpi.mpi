#!/bin/sh
#
# Copyright (c) 2006-2007 High Performance Computing Center Stuttgart,
#                         University of Stuttgart.  All rights reserved.
#           (c) 2009-2010 Instituto de Fisica de Cantabria - CSIC. 
#                         All rights reserved.

if test "x$MPI_START_MPI_PREFIX" = "x"  ; then    
    # assume ompi_info knows the correct prefix,
    ompi_path=`ompi_info --path prefix --parseable 2> /dev/null`
    if test $? -ne 0 ; then
        # if fails, set default in SLC5
        export MPI_START_MPI_PREFIX=/usr/lib64/openmpi/1.4-gcc
        debug_msg "use default mpi path: $MPI_START_MPI_PREFIX"
    else
        export MPI_START_MPI_PREFIX=`echo $ompi_path | cut -f3- -d":"`
        debug_msg "use system mpi path: $MPI_START_MPI_PREFIX"
    fi
fi

# activate MPI
mpi_start_activate_mpi $MPI_START_MPI_PREFIX "$MPI_START_MPI_MODULE"

if test "x$MPI_START_DISABLE_LRMS_INTEGRATION" == "xyes"; then
    # we are not the primary MPI 
    # fall back to save settings that should work always
    debug_msg "disable PBS, SGE"
    OPENMPI_PARAMS="-mca pls ^tm,gridengine -mca ras ^tm,gridengine  "
fi

if test "x$MPI_START_SSH_AGENT" != "x"; then
    # we are not using default start methods, setting specific ssh 
    debug_msg "setting specific ssh agent"
    # plm_rsh_agent is deprecated in newer versions of Open MPI 
    # need to check version and set the appropriate parameter
    OPENMPI_PARAMS="-mca pls ^tm,gridengine -mca ras ^tm,gridengine -mca plm_rsh_agent $MPI_START_SSH_AGENT"
fi

#
# start an mpi job
#
mpi_exec () {
    . $MPI_START_PREFIX/../etc/mpi-start/common.sh
    mpi_start_search_mpiexec

    #handle Open MPI 1.2.2 + PBS bug
    if test "x$MPI_START_SCHEDULER" = "xpbs" -a "x$MPI_START_SSH_AGENT" = "x" ; then
        debug_msg "found openmpi and PBS (without ssh agent), don't set machinefile"
        export I2G_MACHINEFILE_AND_NP="-np $MPI_START_NP"
    else
        debug_msg "found openmpi and a non-PBS batch system, set machinefile and np parameters"
        export I2G_MACHINEFILE_AND_NP="-machinefile $MPI_START_MACHINEFILE -np $MPI_START_NP"
    fi

    if test "x${I2G_MPI_PER_NODE}" != "x" ; then
        # Open MPI does not like to have npernode if it oversubscribes nodes in version 1.2.8 
        if test ${I2G_MPI_PER_NODE} -le ${MPI_START_NSLOTS_PER_HOST} ; then
            I2G_MACHINEFILE_AND_NP="$I2G_MACHINEFILE_AND_NP -npernode $I2G_MPI_PER_NODE"
        else
            warn_msg "Per node count option will not be used in order to avoid node oversubscription!"
        fi
    fi

    # set the parameters to be always used with Open MPI:
    MPI_SPECIFIC_PARAMS="$MPI_SPECIFIC_PARAMS -wdir $PWD "
    if test "x$MPI_START_DO_NOT_USE_WRAPPER" = "x1" ; then
        for vars in $MPI_START_ENV_VARIABLES; do
            MPI_SPECIFIC_PARAMS="$MPI_SPECIFIC_PARAMS -x $var"
        done
    fi
    MPI_SPECIFIC_PARAMS="$MPI_SPECIFIC_PARAMS --prefix $MPI_START_MPI_PREFIX $OPENMPI_PARAMS"

    if test "x$MPI_MPIEXEC" != "x"; then
        MPIEXEC=$MPI_MPIEXEC
        # TODO: What is I2G_MPI_MPIEXEC_PARAMS exactly???
        MPI_SPECIFIC_PARAMS="$MPI_SPECIFIC_PARAMS $I2G_MPI_MPIEXEC_PARAMS"
    elif test "x$MPI_MPIRUN" != "x"; then
        MPIEXEC=$MPI_MPIRUN
    else
        error_msg "no mpiexec/mpirun found!"
        dump_env
        exit 1
    fi

    . $MPI_START_PREFIX/../etc/mpi-start/generic_mpiexec.sh
    generic_mpiexec
    return $?
}


mpi_start () {
    . $MPI_START_PREFIX/../etc/mpi-start/generic_mpi_start.sh
    generic_mpi_start
    return $?
}
