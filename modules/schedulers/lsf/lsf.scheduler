#!/bin/sh
#
# Copyright (c) 2006-2007 High Performance Computing Center Stuttgart,
#                         University of Stuttgart.  All rights reserved.
#

SCHEDULER_NAME="lsf"

#
# This function checks if the current job is running in a LSF
# environment.
#
# Return values :
#  0     - Support for this kind of scheduler is found.
#  else  - NO support for this of scheduler is found. 
#
scheduler_available () {
    debug_msg " checking for \$LSB_HOSTS"
	if test "x$LSB_HOSTS" != "x" ; then 
		return 0;
	fi
    debug_msg " checking for \$LSB_MCPU_HOSTS"
	if test "x$LSB_MCPU_HOSTS" != "x" ; then 
		return 0;
	fi
	
	# TODO: fix for the case of more that 128 nodes. In this case
	#       the hosts are not longer provided by the environment 
	#       variable.
	
	return 13
}

build_lsb_hosts () {
    debug_msg " build machinefile based on LSB_HOSTS"
    export MPI_START_MACHINEFILE=`$MPI_START_MKTEMP`
    export MPI_START_HOSTFILE=`$MPI_START_MKTEMP`
    export MPI_START_HOST_SLOTS_FILE=`$MPI_START_MKTEMP`
    for host in $LSB_HOSTS; do
        echo $host >> $MPI_START_MACHINEFILE
    done
    cat $MPI_START_MACHINEFILE | sort | uniq -c | tr -s " " |
        # this is a subshell, variables changes here are not changed outside!
        while read line; do
            slots=`echo $line | cut -f1 -d" "`
            host=`echo $line | cut -f2 -d" "`
            echo $host >> $MPI_START_HOSTFILE
            echo $host $slots >> $MPI_START_HOST_SLOTS_FILE
        done
    export MPI_START_NHOSTS=`cat $MPI_START_HOSTFILE | wc -l`
    export MPI_START_NSLOTS_PER_HOST=`cat $MPI_START_HOST_SLOTS_FILE | cut -f2 -d" " | sort -n | head -1`
    export MPI_START_NSLOTS=`cat $MPI_START_MACHINEFILE | wc -l`
    return 0
}

build_lsb_mcpu_hosts () {
    debug_msg " build machinefile based on LSB_MCPU_HOSTS"
    export MPI_START_MACHINEFILE=`$MPI_START_MKTEMP`
    export MPI_START_HOSTFILE=`$MPI_START_MKTEMP`
    export MPI_START_HOST_SLOTS_FILE=`$MPI_START_MKTEMP`
    is_host=1
    last_host=""
    total_slots=0
    total_hosts=0
    for field in $LSB_MCPU_HOSTS; do
        if test $is_host -eq 1; then
            last_host=$field
            echo $last_host >> $MPI_START_HOSTFILE
            total_hosts=`expr $total_hosts + 1`
            is_host=0
        else
            is_host=1
            slots=$field
            echo $last_host $slots >> $MPI_START_HOST_SLOTS_FILE
            while [ $slots -ne 0 ]; do
                echo $last_host >> $MPI_START_MACHINEFILE
                slots=`expr $slots - 1`
            done
            total_slots=`expr $total_slots + $slots`
        fi
    done
    export MPI_START_NHOSTS=$total_hosts
    export MPI_START_NSLOTS=$total_slots
    export MPI_START_NSLOTS_PER_HOST=`cat $MPI_START_HOST_SLOTS_FILE | cut -f2 -d" " | sort -n | head -1`
    return 0
}

#
# This function is called to setup 
#
scheduler_get_machinefile () {
    if test "x$LSB_HOSTS" = "x" -o "x$LSB_MCPU_HOSTS" = "x" ; then
        return 13
    fi
    if test "x$LSB_HOSTS" != "x" ; then
        build_lsb_hosts
    else
        build_lsb_mcpu_hosts
    fi
}

