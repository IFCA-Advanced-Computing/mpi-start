#!/bin/bash

#
# Copyright (c) 2009-2010  Instituto de Fisica de Cantabria - CSIC. 
#                          All rights reserved.

MPI_COMPILER_HOOK=${MPI_COMPILER_HOOK:-1}

#
# determine if the compiler is 64 bit (x86_64) or not.
#
compiler_hook_is64bit () {
    debug_msg " finding out if compiler is 64 bit."

    if test "x$I2G_MPI_TYPE" = "xopenmpi" ; then
        $MPI_OPENMPI_INFO --parseable --arch | grep "x86_64" &> /dev/null
        return $?
    elif test "x$I2G_MPI_TYPE" = "xmpich" -o "x$I2G_MPI_TYPE" = "xmpich2" ; then 
        machine=`$MPI_MPICC -dumpmachine`
        if test $? -eq 0 ; then
            echo $machine | grep "x86_64" &> /dev/null
            return $?
        fi
    fi
    # last resort, use machine's architecture
    uname -p | grep "x86_64" &> /dev/null 
    return $?
}

#
# make sure not wrong architecture flags are set in the compiler opts.
#
compiler_hook_set_compiler_flags() {

    compiler_hook_is64bit
    is64bit=$?
    if test $is64bit ; then
        change='s/-m32/-m64/g'
    else
        change='s/-m64/-m32/g'
    fi
    for compiler in CC CXX F90 F70; do
        eval options="\${MPI_MPI${compiler}_OPTS}"
        if test "x$options" !=  "x" ; then
            debug_msg "Updating MPI_MPI${compiler}_OPTS variable."
            options=`echo $options | sed -e $change`
            eval MPI_MPI${compiler}_OPTS="\${options}"
        fi
    done
}

# try to compile a small mpi program 
compiler_hook_check_compiler_flags() {
    debug_msg " compiler_hook_check_compiler_flags"

    mpi_start_mktemp -d
    local wdir=$MPI_START_TEMP_FILE
    cat > $wdir/test.c << EOF
#include <mpi.h>
int main(int argc, char **argv) { MPI_Init(&argc, &argv); return 0; }
EOF
    $MPI_MPICC $MPI_MPICC_OPTS $wdir/test.c -o $wdir/test &> /dev/null
    status=$?
    # we can refine this, by trying to look for "skipping incompatible" in the output
    rm -rf $wdir
    return $status
}

#
# hook for setting compiler configuration
#
pre_run_hook () {
    if test "x${MPI_COMPILER_HOOK}" != "x1" ; then
        return 0
    fi

    debug_msg "compiler_hooks"

    debug_msg "determining default compilers"

    MPICC_COMP="$MPICC mpicc"
    MPIF90_COMP="$MPIF90 mpif90"
    MPIF77_COMP="$MPIF77 mpif77"
    MPICXX_COMP="$MPICXX mpicxx mpic++ mpiCC"
    # First try to find the compilers
    MPI_TYPE=`echo $I2G_MPI_TYPE | tr "[:lower:]" "[:upper:]" | tr "-" "_"`
    for compiler in MPICC MPICXX MPIF90 MPIF77; do
        var=MPI_${compiler}
        VALUE=`eval echo \\$MPI_${MPI_TYPE}_${compiler}`
        if test "x${VALUE}" != "x" ; then
            eval export ${var}="\${VALUE}"
        fi
        which "`eval echo \\$${var}`" &> /dev/null
        st=$?
        if test $st -ne 0 ; then
            # try suffixing the compilers
            for c in `eval echo \\${${compiler}_COMP}` ; do
                eval export ${var}="\${c}.${I2G_MPI_TYPE}"
                which "`eval echo \\$${var}`" &> /dev/null
                st=$?
                if test $st -ne 0 ; then
                    eval export ${var}="\${c}"
                    which "`eval echo \\$${var}`" &> /dev/null
                    st=$?
                    if test $st -ne 0 ; then
                        eval export ${var}="\${c}"
                    else
                        break
                    fi
                else
                    break
                fi
            done
        fi
    done

    which $MPI_MPICC &> /dev/null
    st=$?
    if test $st -ne 0 ; then
        debug_msg "compiler not found, will not continue with hook"
        return 0
    fi

    compiler_hook_check_compiler_flags
    status=$?
    if test $status -ne 0 ; then
        # set appropriate compiler flags for architecture
        # if current ones are not appropriate
        debug_msg "compiler flags seem incorrect, will try to fix them"
        compiler_hook_set_compiler_flags
    fi
    return 0
}
