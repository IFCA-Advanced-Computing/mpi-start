#!/bin/bash

#
# Copyright (c) 2006-2007 High Performance Computing Center Stuttgart, 
#                         University of Stuttgart.  All rights reserved. 
#           (c) 2009      Instituto de Fisica de Cantabria - CSIC. 
#

check_distribution_method() {
    result=255
    if test "x$I2G_MPI_TYPE" = "xmpich" -o "x$I2G_MPI_TYPE" = "xmpich2"; then 	
        if test "x${MPI_START_SCHEDULER}" = "xpbs" ; then
            if test "x${MPI_MPIEXEC}" != "x" ; then
                $MPI_MPIEXEC 2>&1 | grep -e "-\<np\>" > /dev/null 2>&1
                status=$?
                if test $status -ne 0 ; then
                    result=0
                fi
            fi
        fi
    fi
    return $result
}	

copy() {
    debug_msg "distribute using mpiexec"
    # backup old values
    old_application=$I2G_MPI_APPLICATION
    old_application_args=$I2G_MPI_APPLICATION_ARGS
    old_precommand=$I2G_MPI_PRECOMMAND
    old_mpiexec_params=$MPI_SPECIFIC_MPIEXEC_PARAMS
    old_stdin=$I2G_MPI_APPLICATION_STDIN
    old_stdout=$I2G_MPI_APPLICATION_STDOUT
    old_pernode=$MPI_START_NPHOST

    # set to tmp. values
    MPI_START_DO_NOT_USE_WRAPPER=1
    I2G_MPI_APPLICATION="cat"
    I2G_MPI_APPLICATION_STDIN="${TARBALL}"
    I2G_MPI_APPLICATION_STDOUT="${TARBALL}_out"
    I2G_MPI_APPLICATION_ARGS=
    MPI_SPECIFIC_MPIEXEC_PARAMS="--allstdin --comm=none"
    MPI_START_NPHOST=1
    I2G_MPI_PRECOMMAND=

    # launch the mpi job
    mpi_exec
    result=$?
    if test $result -ne 0 ; then
        error_msg "error while trying to distribute files"
        dump_env
        exit $result
    fi

    # set to tmp. values
    I2G_MPI_APPLICATION="tar"
    I2G_MPI_APPLICATION_ARGS="xzf ${TARBALL}_out -C /"
    I2G_MPI_APPLICATION_STDIN=
    I2G_MPI_APPLICATION_STDOUT=
    MPI_SPECIFIC_MPIEXEC_PARAMS="--nolocal --comm=none"
    I2G_MPI_PRECOMMAND=
	
    # launch the mpi job
    mpi_exec
    result=$?
    if test $result -ne 0 ; then
        error_msg "error while trying to distribute files"
        dump_env
        exit $result
    fi

    # finally copy the user proxy
    if test "x${X509_USER_PROXY}" != "x" -a -f ${X509_USER_PROXY} ; then
        I2G_MPI_APPLICATION="cat"
        I2G_MPI_APPLICATION_STDIN="${X509_USER_PROXY}"
        I2G_MPI_APPLICATION_STDOUT="${X509_USER_PROXY}_out"
        I2G_MPI_APPLICATION_ARGS=
        MPI_SPECIFIC_MPIEXEC_PARAMS="--allstdin --comm=none"
        MPI_START_NPHOST=1
        I2G_MPI_PRECOMMAND=
        # launch the mpi job
        mpi_exec
        result=$?
        if test $result -ne 0 ; then
            error_msg "error while trying to distribute files"
            dump_env
            exit $result
        fi
        export X509_USER_PROXY="${X509_USER_PROXY}_out"
    fi

    # restore old values
    I2G_MPI_APPLICATION=$old_application
    I2G_MPI_APPLICATION_ARGS=$old_application_args
    I2G_MPI_PRECOMMAND=$old_precommand
    I2G_MPI_APPLICATION_STDIN=$old_stdin
    I2G_MPI_APPLICATION_STDOUT=$old_stdout
    MPI_SPECIFIC_MPIEXEC_PARAMS=$old_mpiexec_params
    MPI_START_NPHOST=$old_pernode
    unset MPI_START_DO_NOT_USE_WRAPPER

    return $result
}

clean(){
    debug_msg "clean using mpiexec"
    # backup old values
    old_application=$I2G_MPI_APPLICATION
    old_application_args=$I2G_MPI_APPLICATION_ARGS
    old_precommand=$I2G_MPI_PRECOMMAND
    old_mpiexec_params=$MPI_SPECIFIC_MPIEXEC_PARAMS
    old_stdin=$I2G_MPI_APPLICATION_STDIN
    old_stdout=$I2G_MPI_APPLICATION_STDOUT
    old_pernode=$MPI_START_NPHOST

    # set to tmp. values
    MPI_START_DO_NOT_USE_WRAPPER=1
    I2G_MPI_APPLICATION="rm"
    I2G_MPI_APPLICATION_ARGS="-rf `pwd`"
    I2G_MPI_APPLICATION_STDIN=
    I2G_MPI_APPLICATION_STDOUT=
    MPI_SPECIFIC_MPIEXEC_PARAMS="--nolocal --comm=none"
    MPI_START_NPHOST=1
    I2G_MPI_PRECOMMAND=

    mpi_exec
    result=$?
    if test $result -ne 0 ; then
        error_msg "error while trying to clean files"
        dump_env
        exit $result
    fi

    # restore old values
    I2G_MPI_APPLICATION=$old_application
    I2G_MPI_APPLICATION_ARGS=$old_application_args
    I2G_MPI_PRECOMMAND=$old_precommand
    I2G_MPI_APPLICATION_STDIN=$old_stdin
    I2G_MPI_APPLICATION_STDOUT=$old_stdout
    MPI_SPECIFIC_MPIEXEC_PARAMS=$old_mpiexec_params
    MPI_START_NPHOST=$old_pernode
    unset MPI_START_DO_NOT_USE_WRAPPER

    return $result
}
