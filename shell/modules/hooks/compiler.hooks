#!/bin/sh 
#
# Copyright (c) 2009      Instituto de Fisica de Cantabria - CSIC. 
#

#
# determine if the compiler is 64 bit (x86_64) or not.
#
mpi_start_compiler_is64bit () {
    debug_msg "finding out if compiler is 64 bit."

    if test "x$I2G_MPI_TYPE"="xopenmpi" ; then
        command="opal_info"
        which $command >& /dev/null
        status=$?
        if test $? -eq 1 ; then
            command="ompi_info"
        fi
        $command --parseable --arch | grep "x86_64" &> /dev/null
        return $?
    elif test "x$I2G_MPI_TYPE"="xmpich" -o  "x$I2G_MPI_TYPE"="xmpich2" ; then 
        machine=`mpicc -dumpmachine`
        if test $? -eq 0 ; then
            echo $machine | grep "x86_64" &> /dev/null
            return $?
        fi
    fi
    # last resort, use machine's architecture
    uname -p | grep "x86_64" &> /dev/null 
    return $?
}

#
# make sure not wrong architecture flags are set in the compiler opts.
#
mpi_start_set_compiler_flags() {

    is64bit=mpi_start_compiler_is64bit
    if test $is64bit ; then
        change='s/-m32/-m64/g'
    else
        change='s/-m64/-m32/g'
    fi
    for compiler in CC CXX F90 F70; do
        eval options="\${MPI_MPI${compiler}_OPTS}"
        if test "x$options" !=  "x" ; then
            debug_msg "Updating MPI_MPI${compiler}_OPTS variable."
            options=`echo $options | sed -e $change`
            eval MPI_MPI${compiler}_OPTS="\${options}"
        fi
    done
}

# try to compile a small mpi program 
mpi_start_check_compiler_flags() {
    debug_msg "mpi_start_check_compiler_flags"

    wdir=`mktemp -d`
    cat > $wdir/test.c << EOF
#include <mpi.h>
int main(int argc, char **argv) { MPI_Init(&argc, &argv); return 0; }
EOF
    mpicc $MPI_MPICC_OPTS $wdir/test.c -o $wdir/test &> /dev/null
    status=$?
    # we can refine this, by trying to look for "skipping incompatible" in the output
    rm -rf $wdir
    return $status
}

#
# hook for setting compiler configuration
#
mpi_start_compiler_hooks () {
    debug_msg "mpi_start_compiler_hooks"

    mpi_start_check_compiler_flags
    status=$?
    if test $status -ne 0 ; then
        # set appropriate compiler flags for architecture
        # if current ones are not appropriate
        debug_msg "compiler flags seem incorrect, will try to fix them"
        mpi_start_set_compiler_flags
    fi
    return 0
}
